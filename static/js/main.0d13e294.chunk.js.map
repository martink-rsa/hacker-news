{"version":3,"sources":["useDataApi.js","Components/Header/Header.js","Components/SearchInput/SearchInput.js","Components/ArticleItem/ArticleItem.js","Components/ArticleList/ArticleList.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","useDataApi","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","a","async","Axios","result","fetchData","useStyles","makeStyles","root","flexGrow","title","Header","props","darkMode","setDarkMode","classes","className","AppBar","position","Toolbar","Typography","variant","align","Switch","checked","onChange","value","inputProps","switchDark","theme","form","display","flexDirection","padding","spacing","textAlign","color","palette","text","secondary","formBtn","marginTop","SearchInput","doFetch","query","setQuery","noValidate","autoComplete","onSubmit","event","preventDefault","FormControl","InputLabel","htmlFor","Input","id","target","Button","even","background","ArticleItem","itemID","itemUrl","itemTitle","date","points","author","comments","isStory","differentBG","ListItem","disableGutters","ListItemAvatar","Avatar","ListItemText","primary","noWrap","Link","href","ArticleList","List","hits","map","item","index","key","Math","random","objectID","_tags","comment_text","moment","created_at","fromNow","num_comments","defaultProps","paper","inline","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","React","useMemo","createMuiTheme","blueGrey","grey","contrastThreshold","default","overrides","MuiPaper","MuiButton","margin","ThemeProvider","CssBaseline","Container","maxWidth","Grid","container","xs","Paper","demo","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d13e294.chunk.js","sourcesContent":["import { useState, useEffect, useReducer } from 'react';\nimport Axios from 'axios';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state, isLoading: true, isError: false };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return { ...state, isLoading: false, isError: true };\n    default:\n      throw new Error();\n  }\n};\n\nconst useDataApi = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n      try {\n        const result = await Axios(url);\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (error) {\n        dispatch({ type: 'FETCH_FAILURE' });\n      }\n    };\n    fetchData();\n  }, [url]);\n\n  return [state, setUrl];\n};\n\nexport default useDataApi;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n// MUI\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header(props) {\n  const { title, darkMode, setDarkMode } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" align=\"left\" className={classes.title}>\n            {title}\n          </Typography>\n          <Switch\n            checked={darkMode}\n            onChange={() => setDarkMode(!darkMode)}\n            value=\"darkmode\"\n            inputProps={{ 'aria-label': 'darkmode select' }}\n            className={classes.switchDark}\n          />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  darkMode: PropTypes.bool.isRequired,\n  setDarkMode: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\n// import FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formBtn: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function SearchInput(props) {\n  const classes = useStyles();\n  const { doFetch, query, setQuery } = props;\n\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={event => {\n        doFetch(`https://hn.algolia.com/api/v1/search?query=${query}`);\n        event.preventDefault();\n      }}\n    >\n      <FormControl>\n        <InputLabel htmlFor=\"component-simple\">Search Term</InputLabel>\n        <Input\n          id=\"component-simple\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n      </FormControl>\n      <Button type=\"submit\" variant=\"contained\" className={classes.formBtn}>\n        Search\n      </Button>\n    </form>\n  );\n}\n\nSearchInput.propTypes = {\n  doFetch: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  setQuery: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n// MUI\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '@material-ui/core/Link';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: '0 5px',\n  },\n  even: {\n    background: 'rgba(0, 0, 0, 0.07)',\n  },\n}));\n\nexport default function ArticleItem(props) {\n  const classes = useStyles();\n  const {\n    itemID,\n    itemUrl,\n    itemTitle,\n    date,\n    points,\n    author,\n    comments,\n    isStory,\n    differentBG,\n  } = props;\n  return (\n    <ListItem\n      disableGutters\n      className={differentBG ? `${classes.even} ${classes.root}` : classes.root}\n    >\n      <ListItemAvatar>\n        <Avatar>{isStory ? <DescriptionIcon /> : <ChatIcon />}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <>\n            <Typography noWrap>\n              <Link href={itemUrl} color=\"textPrimary\">\n                {itemTitle}\n              </Link>\n            </Typography>\n          </>\n        }\n        secondary={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <>\n            <Link\n              color=\"textSecondary\"\n              href={`https://news.ycombinator.com/item?id=${itemID}`}\n            >\n              {`${date} - `}\n            </Link>\n            {isStory === true ? (\n              <Link\n                color=\"textSecondary\"\n                href={`https://news.ycombinator.com/item?id=${itemID}`}\n              >\n                {points === null ? '0' : `${points}`}\n                {points === 1 ? ' point - ' : ' points - '}\n              </Link>\n            ) : null}\n            <Link\n              color=\"textSecondary\"\n              href={`https://news.ycombinator.com/user?id=${author}`}\n            >\n              {author}\n            </Link>\n            {isStory === true ? (\n              <Link\n                color=\"textSecondary\"\n                href={`https://news.ycombinator.com/item?id=${itemID}`}\n              >\n                {comments === null\n                  ? ' - 0 comments - '\n                  : ` - ${comments} comments`}\n              </Link>\n            ) : null}\n          </>\n        }\n      />\n    </ListItem>\n  );\n}\n\nArticleItem.defaultProps = {\n  points: null,\n  comments: null,\n};\n\nArticleItem.propTypes = {\n  itemID: PropTypes.string.isRequired,\n  itemUrl: PropTypes.string.isRequired,\n  itemTitle: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  points: PropTypes.number,\n  author: PropTypes.string.isRequired,\n  comments: PropTypes.number,\n  isStory: PropTypes.bool.isRequired,\n  differentBG: PropTypes.bool.isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n// MUI\nimport List from '@material-ui/core/List';\n// Components\nimport ArticleItem from '../ArticleItem/ArticleItem';\n\nexport default function ArticleList(props) {\n  const { data } = props;\n  return (\n    <List>\n      {data.hits.map((item, index) => (\n        <ArticleItem\n          key={`sto-${Math.random() * 999}-${Math.random() * 999}`}\n          itemID={item.objectID}\n          itemUrl={\n            item._tags[0] === 'story'\n              ? item.url\n              : `https://news.ycombinator.com/item?id=${item.objectID}`\n          }\n          itemTitle={item._tags[0] === 'story' ? item.title : item.comment_text}\n          date={moment(item.created_at).fromNow()}\n          points={item.points}\n          author={item.author}\n          comments={item.num_comments}\n          isStory={item._tags[0] === 'story'}\n          differentBG={index % 2 === 0}\n        />\n      ))}\n    </List>\n  );\n}\n\nArticleList.propTypes = {\n  data: PropTypes.shape({\n    hits: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.css';\n/* MUI */\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { blueGrey, grey } from '@material-ui/core/colors';\n/* Components and Modules */\nimport useDataApi from '../../useDataApi';\nimport Header from '../Header/Header';\nimport SearchInput from '../SearchInput/SearchInput';\nimport ArticleList from '../ArticleList/ArticleList';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n  inline: {\n    fontSize: '12px',\n  },\n}));\n\n/*\n$.ajax('http://opengraph.io/api/1.0/site/http%3A%2F%2Fwww.washingtontimes.com%2F')\n  .done(function(data){\n    console.log(data);\n  });\n  */\n\nexport default function App() {\n  const classes = useStyles();\n  const [query, setQuery] = useState('React');\n  const [darkMode, setDarkMode] = useState(false);\n\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(\n    'https://hn.algolia.com/api/v1/search?query=React',\n    {\n      hits: [],\n    },\n  );\n\n  const theme = React.useMemo(\n    () =>\n      // eslint-disable-next-line implicit-arrow-linebreak\n      createMuiTheme({\n        palette: {\n          type: darkMode ? 'dark' : 'light',\n          primary: blueGrey,\n          secondary: grey,\n          contrastThreshold: 3,\n          // tonalOffset: 0.2,\n          background: {\n            default: darkMode ? '#000' : '#313C4C',\n          },\n        },\n        overrides: {\n          MuiPaper: {\n            root: {\n              // padding: '0px 20px',\n              // margin: '20px 0',\n              // backgroundColor: 'rgb(247, 249, 248)', // 5d737e\n            },\n          },\n          MuiButton: {\n            root: {\n              margin: '5px',\n            },\n          },\n        },\n      }),\n    [darkMode],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header\n        title=\"HackerNews\"\n        darkMode={darkMode}\n        setDarkMode={setDarkMode}\n      />\n      <Container maxWidth=\"md\">\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            {null}\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <SearchInput\n                doFetch={doFetch}\n                query={query}\n                setQuery={setQuery}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              {isError && <div>Error searching for your query</div>}\n              {isLoading ? (\n                <div>LOADING...</div>\n              ) : (\n                <div>\n                  <Typography variant=\"h6\" align=\"center\">\n                    Results\n                  </Typography>\n\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <div className={classes.demo}>\n                        <ArticleList data={data} />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}